input AMPLIFY {
  globalAuthRule: AuthRule = {allow: public}
}

input CreateCategory_itemsInput {
  id: Int!
  name: String!
  photo: String!
}

type category_items {
  id: Int!
  name: String!
  photo: String!
}

input UpdateCategory_itemsInput {
  id: Int!
  name: String
  photo: String
}

input CreateItemsInput {
  id: Int!
  title: String!
  description: String!
  price: Float!
  photo: String!
  id_category: Int!
  id_restaurant: Int!
}

type items {
  id: Int!
  title: String!
  description: String!
  price: Float!
  photo: String!
  id_category: Int!
  id_restaurant: Int!
}

input UpdateItemsInput {
  id: Int!
  title: String
  description: String
  price: Float
  photo: String
  id_category: Int
  id_restaurant: Int
}

input CreateOrdersInput {
  id: Int!
  date: AWSTimestamp!
  id_table: Int!
}

type orders {
  id: Int!
  date: AWSTimestamp!
  id_table: Int!
}

input UpdateOrdersInput {
  id: Int!
  date: AWSTimestamp
  id_table: Int
}

input CreateRestaurantsInput {
  id: Int!
  name: String!
  address: String!
  mail: String!
  phone: String!
  location: String!
}

type restaurants {
  id: Int!
  name: String!
  address: String!
  mail: String!
  phone: String!
  location: String!
}

input UpdateRestaurantsInput {
  id: Int!
  name: String
  address: String
  mail: String
  phone: String
  location: String
}

input CreateTablesInput {
  id: Int!
  table_number: Int!
  table_active: String!
  table_call: String!
  id_restaurant: Int!
}

type tables {
  id: Int!
  table_number: Int!
  table_active: String!
  table_call: String!
  id_restaurant: Int!
}

input UpdateTablesInput {
  id: Int!
  table_number: Int
  table_active: String
  table_call: String
  id_restaurant: Int
}

type Mutation {
  deleteCategory_items(id: Int!): category_items
  createCategory_items(createCategory_itemsInput: CreateCategory_itemsInput!): category_items
  updateCategory_items(updateCategory_itemsInput: UpdateCategory_itemsInput!): category_items
  deleteItems(id: Int!): items
  createItems(createItemsInput: CreateItemsInput!): items
  updateItems(updateItemsInput: UpdateItemsInput!): items
  deleteOrders(id: Int!): orders
  createOrders(createOrdersInput: CreateOrdersInput!): orders
  updateOrders(updateOrdersInput: UpdateOrdersInput!): orders
  deleteRestaurants(id: Int!): restaurants
  createRestaurants(createRestaurantsInput: CreateRestaurantsInput!): restaurants
  updateRestaurants(updateRestaurantsInput: UpdateRestaurantsInput!): restaurants
  deleteTables(id: Int!): tables
  createTables(createTablesInput: CreateTablesInput!): tables
  updateTables(updateTablesInput: UpdateTablesInput!): tables
}

type Query {
  getCategory_items(id: Int!): category_items
  listCategory_itemss: [category_items]
  getItems(id: Int!): items
  listItemss: [items]
  getOrders(id: Int!): orders
  listOrderss: [orders]
  getRestaurants(id: Int!): restaurants
  listRestaurantss: [restaurants]
  getTables(id: Int!): tables
  listTabless: [tables]
}

type Subscription {
  onCreateCategory_items: category_items @aws_subscribe(mutations: ["createCategory_items"])
  onCreateItems: items @aws_subscribe(mutations: ["createItems"])
  onCreateOrders: orders @aws_subscribe(mutations: ["createOrders"])
  onCreateRestaurants: restaurants @aws_subscribe(mutations: ["createRestaurants"])
  onCreateTables: tables @aws_subscribe(mutations: ["createTables"])
}

schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}
